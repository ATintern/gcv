'use strict';var Alignment=Alignment||{};Alignment.smithWaterman=function(sequence,reference,options){var computeScore=function computeScore(a,b){a=options.accessor(a);b=options.accessor(b);if(a===b&&a!=''){return options.scores.match}return options.scores.mismatch};var align=function align(seq,ref){var rows=ref.length+1,cols=seq.length+1,a=Array.matrix(rows,cols,0);var i=0,j=0;var choice=[0,0,0,0];var max=0,iMax=0,jMax=0;for(i=1;i<rows;i++){for(j=1;j<cols;j++){choice[0]=0;choice[1]=a[i-1][j-1]+computeScore(ref[i-1],seq[j-1]);choice[2]=a[i-1][j]+options.scores.gap;choice[3]=a[i][j-1]+options.scores.gap;a[i][j]=choice.max();if(a[i][j]>=max){max=a[i][j];iMax=i;jMax=j}}}i=iMax;j=jMax;var diag,up,left,score=max,outRef=[],outSeq=[];while(i>0&&j>0){score=a[i][j];if(score==0){break}diag=a[i-1][j-1];up=a[i][j-1];left=a[i-1][j];if(score==diag+computeScore(ref[i-1],seq[j-1])){outRef.unshift(clone(ref[i-1]));outSeq.unshift(clone(seq[j-1]));i-=1;j-=1}else if(score==left+options.scores.gap){outRef.unshift(clone(ref[i-1]));outSeq.unshift(null);i-=1}else if(score==up+options.scores.gap){outRef.unshift(null);outSeq.unshift(clone(seq[j-1]));j-=1}else{break}}while(j>0){outRef.unshift(null);outSeq.unshift(clone(seq[j-1]));j-=1}return{sequence:outSeq,reference:outRef,score:max}};var options=options||{};options.accessor=options.accessor||function(e){return e};options.scores=options.scores||{};options.scores.match=options.scores.match||5;options.scores.mismatch=options.scores.mismath=0;options.scores.gap=options.scores.gap||-1;var forward=align(sequence,reference),reverseReference=reference.slice(0);reverseReference.reverse();var reverse=align(sequence,reverseReference);var output;if(forward.score>=reverse.score){output=forward}else{for(var i=0;i<reverse.reference.length;i++){if(reverse.reference[i]!=null){reverse.reference[i].strand=-1*reverse.reference[i].strand}}output=reverse}return[[[output.sequence,output.reference]],output.score]};Alignment.repeat=function(){};Alignment.merge=function(data,selected,alignments){var n=data.groups.length,length=data.groups[0].genes.length;for(var k=0;k<alignments.length;k++){var queryCount=0,preQuery=0,insertionCount=0,alignment=alignments[k],index=n+k;data.groups.push(selected[k]);data.groups[index].genes=[];for(var i=0;i<alignment[0].length;i++){if(alignment[0][i]==null&&queryCount==0){preQuery++}else if(alignment[0][i]==null){if(queryCount>=length){alignment[1][i].x=queryCount++;alignment[1][i].y=k+1;data.groups[index].genes.push(alignment[1][i])}else{insertionCount++}}else if(alignment[1][i]==null){queryCount++}else{if(preQuery>0){for(var j=0;j<preQuery;j++){alignment[1][j].x=-1*(preQuery-(j+1));alignment[1][j].y=k+1;data.groups[index].genes.push(alignment[1][j])}preQuery=0}else if(insertionCount>0){var step=1/(insertionCount+1);for(var j=i-insertionCount;j<i;j++){if(alignment[1][j]!=null){alignment[1][j].x=queryCount+step*(i-j)-1;alignment[1][j].y=k+1;data.groups[index].genes.push(alignment[1][j])}}insertionCount=0}alignment[1][i].x=queryCount++;alignment[1][i].y=k+1;data.groups[index].genes.push(alignment[1][i])}}}};

